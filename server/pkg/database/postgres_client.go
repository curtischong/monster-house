package database
import (
	"fmt"
	"github.com/jmoiron/sqlx"
	"github.com/google/uuid"
	"../config"
)

type PostgresClient struct{
	config config.DatabaseConfig
}

func NewPostgresClient(
	config *config.Config,
) *PostgresClient{
	return &PostgresClient{
		config: config.DatabaseConfig,
	}
}

func (client *PostgresClient) insertTag(
	photoID uuid.UUID,
	isAutoGenerated bool,
	tagName string,
)error{
	db, err := client.getDBClient()
	if err != nil{
		return err
	}
	tx := db.MustBegin()
	tx.MustExec("INSERT INTO tag (id, photo_id, is_auto_generated, name) VALUES ($1, $2, $3, $4)",
		uuid.New(), photoID, isAutoGenerated, tagName)
	return nil
}

func (client *PostgresClient) getDBClient() (*sqlx.DB, error){
	dataSourceName := fmt.Sprintf("user=%s password=%s dbname=%s sslmode=disable",
		client.config.Username, client.config.Password, client.config.DBName)
	db, err := sqlx.Connect("postgres", dataSourceName)
	if err != nil{
		return nil, fmt.Errorf("cannot connect to database. err=%s", err)
	}
	return db, nil
}